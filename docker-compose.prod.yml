version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: transferapp-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-transferapp}
      POSTGRES_USER: ${POSTGRES_USER:-transferapp}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-transferapp123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - transferapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-transferapp}"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: .
      dockerfile: TransferApp.Api/Dockerfile
    container_name: transferapp-api-prod
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__Default=Host=postgres;Database=${POSTGRES_DB:-transferapp};Username=${POSTGRES_USER:-transferapp};Password=${POSTGRES_PASSWORD:-transferapp123}
      - Admin__Username=${ADMIN_USERNAME:-admin}
      - Admin__Password=${ADMIN_PASSWORD:-ChangeMe123!}
    ports:
      - "${API_PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - transferapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: ./transfer-app-ui
      dockerfile: Dockerfile
    container_name: transferapp-nginx-prod
    ports:
      - "${NGINX_PORT:-80}:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - api
    networks:
      - transferapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  transferapp-network:
    driver: bridge

